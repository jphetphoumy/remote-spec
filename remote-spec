#!/usr/bin/env bash

CWD=$(pwd)
dry=0
yellow=$(tput setaf 2)  # Correct syntax for tput command

# Parse arguments
for arg in "$@"; do
    case "$arg" in
        --dry-run)
            dry=1
            break  # Exit early if --dry-run is found
            ;;
    esac
done

# Function to execute commands with optional dry run
execute () {
    if [[ $dry -eq 1 ]]; then
        echo "[DRY_RUN] $@"
    else
        eval "$@"
    fi
}

# Boilerplate script content
init_script=$(cat <<EOF
#!/usr/bin/env bash

source ~/.remote-spec/framework.sh
Describe \"Infrastructure test\"
    It \"Should work\"
        AssertEquals \"test\" \"test\"
    End
End
EOF
)

log() {
    echo $1
}

# Handle the 'init' command
if [[ "$1" == "init" ]]; then
    shift
    test_name=$1

    if [[ -z "$test_name" ]]; then
        echo "Error: No name provided for initialization."
        exit 1
    fi

    # Create the file with boilerplate content
    execute "touch $CWD/test_$test_name.sh"
    execute "chmod +x $CWD/test_$test_name.sh"
    execute "echo \"$init_script\" > \"$CWD/test_$test_name.sh\""
elif [[ "$1" == "run" ]]; then
    test_cases=$(find $CWD -maxdepth 1 -mindepth 1 -type f -executable)
    for test_case in $test_cases; do
        if echo "$test_case" | grep -qv "$2"; then
            continue
        fi
        log "[+] Running $test_case"
        execute $test_case
    done
else
    echo "Unknown command. Usage: script init <name> [--dry-run]"
    exit 1
fi

